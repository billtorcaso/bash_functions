###--------------------------------------------
#
#   Decide what platform we are on right now ...
#
 case "$(uname -a)" in 
     ###*Ubuntu*) export _BT_PLATFORM_NAME="ubuntu";; 
     ###*amzn2*)  export _BT_PLATFORM_NAME="awslinux";;
     *Darwin*) export _BT_PLATFORM_NAME="darwin";;
     *)
         echo 1>&2 "PANIC: cannot decide what platform this is! Get help."
         return 1
     ;;
 esac

###--------------------------------------------
PATH="$PATH:/Library/Frameworks/Python.framework/Versions/3.9/bin"

###--------------------------------------------

#   These are experiments

function her()   { heroku "$@"; }
#-----
function s3api() { Tmp s3api/$1; }
function dih()   { desk disk-info-here/$1; }
function dihs()  { dih Code/sql-here/$1; }
function sqlv()  { sql3 ${1:-v6.db}; }

### Just for debugging: declare -f dih
function s3down(){ desk m1-s3-jpfs-here/$1; }
function jpfs()  { s3down just-plain-file-storage/$1; }
function bt1tb() { s3down BT-1TB-WD/$1; }
function dfh_timer() { while dfh ${1:-.}; 
                       do 
                           ff | wcl; echo ===== $(date +%F-%R); sleep 5; 
                       done ; }

###--------------------------------------------

#   This is fundamental to all other "_BT_GIT_*" env variables.

export CODE="$HOME/Code"
function code() { cd $CODE/$1; pwd; }
export _BT_GIT_REPOS_HERE="$CODE/github"
function ifp() { code "InnovatorsForProgress/$1"; }


[[ -d "$_BT_GIT_REPOS_HERE" ]] && \
{
    function repos()    { cd $_BT_GIT_REPOS_HERE/$1; }
} || \
{
    echo 1>&2 "PANIC: cannot find Bill Torcaso repository root.  Get help."
    return 1;
}

###-------------------------------------------

#   Things related to my bash_functions repo

[[ -d "$_BT_GIT_REPOS_HERE/bash_functions" ]] && \
{
    export _BT_BASH_REPO="$_BT_GIT_REPOS_HERE/bash_functions"
    export _BT_BASH_BT_SETUP_FILE="$_BT_BASH_REPO/bt.setup"
    export _BT_BASH_FNED_FILES="$_BT_BASH_BT_SETUP_FILE $_BT_BASH_REPO/generic.bash_functions $_BT_BASH_REPO/$_BT_PLATFORM_NAME.bash_functions"

    function fnsrepo()  { cd $_BT_BASH_REPO/$1; pwd; }
    function fndef()    { declare -f "$@"; }
    function fned()     { vi $(echo $_BT_BASH_FNED_FILES) "$@"; fns ; }
    function fneg()     { declare -F | grep "$@"; }
    function fns()      {
        for thing in $(echo $_BT_BASH_FNED_FILES | \
            sed "s@$_BT_BASH_BT_SETUP_FILE@@")
        do
            [[ -r $thing ]] && \
              source $thing || \
              { echo "'source $thing' failed;"; break; }
        done
    }
    # 'm1.setup' replaces 'bt.setup' on Darwin/Big Sur
    function m1ed() {
        fnsrepo; vi ./m1.setup; cd - ; . $HOME/Code/github/bash_functions/m1.setup 
    }
} || \
{
    echo 1>&2 "PANIC: cannot find bash functions repo directory!  Get help."
    return 1;
}

###--------------------------------------------

#   Activate the definitions in _BT_BASH_FNS_FILES 

fns;

###--------------------------------------------

#   Set the Bash prompt based on which platform this is.
#   Must wait until after the '*_prompt' functions are defined.

case "$_BT_PLATFORM_NAME" in 
    ubuntu)     magenta_prompt;;
    awslinux)   cyan_prompt;;
    darwin)     PS1="";
		function update_terminal_cwd() { echo "[$?]""[$(basename $(dirname $PWD))/$(basename $PWD)]"; };;
esac

true    # That's all, folks!
